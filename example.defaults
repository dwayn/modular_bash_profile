##### Example of a .defaults file that you can put in your local folder to setup the default priority
##### you would like each module to use when being enabled. Without this, you must provide a priority
##### value every time you enable a module. This file can be regenerated by running modular_bash_save_defaults.
##### The comments will be retained at the top of the file and the rest will be replaced with the current state
##### of the enabled modules and priorites
##### The format for this is: [+/-] [global/local] [priority]-[module]
##### Where:
#####   "+" or "-" is default enabled/disabled respectively
#####   "global" or "local" denotes where the module is located
#####   "priority" is the numeric 2-digit default priority for the module
#####   "module" is the name of the module file in modules or local folder
##### Anything that is not in this format will be ignored (leading whitespace is ignored)
# E  loc   Pr   Module
  - global 00 000-modular-loader-test
  + local  00 personal
  + global 01 homebrew
  - global 02 bash-completion
  + global 02 bash
  + global 02 vim
  + global 10 curl
  + global 10 docker
  + global 10 git
  + global 10 gnu_tools
  + global 10 golang
  + global 10 iterm
  - global 10 pyenv
  + global 10 rust
  + global 10 ssh
  + global 20 ps1
  + global 25 conda
  + global 50 misc
